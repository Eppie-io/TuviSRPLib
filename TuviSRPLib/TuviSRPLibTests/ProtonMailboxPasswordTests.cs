using System.Text;
using TuviSRPLib;

namespace TuviSRPLibTests
{
    internal class ProtonMailboxPasswordTests
    {
        [TestCase("password", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 79, 53, 66, 72, 83, 47, 111, 105, 82, 118, 114, 46, 50, 89, 76, 80, 80, 121, 76, 51, 70, 103, 77, 55, 78, 102, 73, 69, 107, 103, 101 })]
        [TestCase("psw", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 82, 66, 69, 117, 70, 112, 110, 109, 46, 53, 65, 106, 76, 108, 68, 69, 65, 117, 78, 115, 79, 80, 49, 74, 50, 108, 68, 116, 116, 112, 121 })]
        [TestCase("password:-123456789-123456789-123456789-1234567!50", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 117, 98, 107, 47, 112, 109, 89, 111, 111, 68, 76, 86, 98, 120, 100, 106, 78, 106, 111, 81, 98, 82, 55, 116, 67, 114, 75, 54, 121, 74, 71 })]
        [TestCase("password:-123456789-123456789-123456789-123456789-123456789-1234567!70", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 47, 86, 71, 51, 118, 56, 50, 120, 116, 50, 107, 86, 120, 107, 117, 118, 111, 119, 89, 87, 80, 53, 101, 52, 105, 114, 65, 100, 51, 70, 50 })]
        [TestCase("password:-123456789-123456789-123456789-123456789-123456789-12345678!71", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 56, 65, 71, 70, 84, 118, 51, 71, 51, 74, 113, 117, 81, 47, 73, 102, 106, 112, 107, 109, 118, 47, 117, 77, 88, 46, 53, 75, 85, 73, 113 })]
        [TestCase("password:-123456789-123456789-123456789-123456789-123456789-123456789!72", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 76, 73, 79, 98, 99, 118, 76, 49, 83, 113, 57, 52, 101, 77, 47, 108, 47, 113, 108, 51, 84, 54, 108, 120, 115, 51, 77, 98, 114, 112, 117 })]
        [TestCase("password:-123456789-123456789-123456789-123456789-123456789-123456789-!73", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 106, 100, 112, 74, 56, 83, 80, 102, 73, 79, 82, 82, 73, 66, 65, 90, 105, 84, 114, 104, 109, 86, 84, 90, 50, 115, 86, 111, 73, 66, 113 })]
        [TestCase("password:-123456789-123456789-123456789-123456789-123456789-123456789-12!75", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 106, 88, 87, 108, 113, 106, 119, 47, 112, 109, 48, 87, 48, 115, 77, 46, 115, 85, 56, 116, 54, 75, 117, 68, 84, 90, 114, 69, 85, 88, 83 })]
        [TestCase("password:-123456789-123456789-123456789-123456789-123456789-123456789-1234567!80", "0123456789ABCDEF", new byte[] { 36, 50, 121, 36, 49, 48, 36, 75, 66, 67, 119, 75, 120, 79, 122, 76, 104, 97, 50, 77, 83, 68, 65, 79, 121, 80, 68, 80, 101, 106, 88, 87, 108, 113, 106, 119, 47, 112, 109, 48, 87, 48, 115, 77, 46, 115, 85, 56, 116, 54, 75, 117, 68, 84, 90, 114, 69, 85, 88, 83 })]

        public void DifferentPasswordSize_ShouldPassTests(string password, string salt, byte[] hash)
        {
            Encoding enc = Encoding.UTF8;
            byte[] passwordBytes = enc.GetBytes(password);
            byte[] saltBytes = enc.GetBytes(salt);

            byte[] mailboxPasswordHash = ProtonSRPUtilities.GetMailboxPassword(passwordBytes, saltBytes);

            Assert.That(mailboxPasswordHash, Is.EqualTo(hash));
        }
    }
}